version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MAPBOX_PUBLIC_TOKEN=${MAPBOX_PUBLIC_TOKEN}
      - EARTHDATA_TOKEN=${EARTHDATA_TOKEN}
      - EARTHDATA_USERNAME=${EARTHDATA_USERNAME}
      - EARTHDATA_PASSWORD=${EARTHDATA_PASSWORD}
    volumes:
      # Mount the trained models and data
      - ./results_full:/app/results_full:ro
      - ./integrated_data_full.csv:/app/integrated_data_full.csv:ro
      - ./sharks_cleaned.csv:/app/sharks_cleaned.csv:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_PUBLIC_TOKEN}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  model_data:
    driver: local